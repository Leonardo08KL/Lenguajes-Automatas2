package Analizador;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal BitAnd, BitOr, Break, Byte, Cadena, Case, Char, Cin, Coma, Comillas, ComparadorIgual,
    Const, Continue, Corchete_a, Corchete_c, Cout, Default, Define, Decremento, Diferente,
    Division, DivisionIgual, Do, Double, DobleMayor, DobleMenor, DosPuntos, Else, Endl, ERROR, Et,
    False, Float, For, Identificador, If, Igual, Int, Include, Incremento, Iostream, Linea,
    Llave_a, Llave_c, Long, Main, MasIgual, MenosIgual, MayorQue, MenorQue, MayorIgual, MenorIgual,
    Modulo, ModuloIgual, Multiplicacion, MultiplicacionIgual, Namespace, Negador, Numero, Numeral,    
    O_logico, Parent_a, Parent_c, P_coma, Punto, Register, Resta, Return, Short, Suma, Std, Struct,
    Switch, Typedef, True, Unsigned, Using, Void, While, Y_logico;

non terminal INICIO, SENTENCIA, DECLARACION, IF, IF_ELSE,
    SENTENCIA_BOOLEANA;

start with INICIO;

INICIO ::= 
    Int Main Parent_a Parent_c Llave_a SENTENCIA Llave_c |
    Main Parent_a Parent_c Llave_a SENTENCIA Llave_c
;
SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE 
;
DECLARACION ::=   
    Int Identificador P_coma |
    Int Identificador Igual Numero P_coma |
    Unsigned Int Identificador P_coma |
    Unsigned Int Identificador Igual Numero P_coma |
    Short Int Identificador P_coma |
    Short Int Identificador Igual Numero P_coma |
    Unsigned Short Int Identificador P_coma |
    Unsigned Short Int Identificador Igual Numero P_coma |
    Long Int Identificador P_coma |
    Long Int Identificador Igual Numero P_coma |
    Unsigned Long Int Identificador P_coma |
    Unsigned Long Int Identificador Igual Numero P_coma |
    Double Identificador P_coma |
    Double Identificador Igual Numero P_coma |
    Long Double Identificador P_coma |
    Long Double Identificador Igual Numero P_coma |
    Float Identificador P_coma |
    Float Identificador Igual Numero P_coma |
    Char Identificador P_coma |
    Char Identificador Igual Comillas Comillas P_coma |
    Unsigned Char Identificador P_coma |
    Unsigned Char Identificador Igual Comillas Comillas P_coma |
    Cadena Identificador P_coma |
    Cadena Identificador Igual Comillas Comillas P_coma
;
/*
SENTENCIA_BOOLEANA ::= 
    Op_booleano | 
    Identificador Op_relacional Op_booleano |
    Identificador Op_relacional Numero |
    Identificador Op_relacional Identificador |
    Identificador Op_relacional Comillas Comillas |
    Identificador Op_relacional Comillas Identificador Comillas
;
IF ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;
IF_ELSE ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c Else Llave_a SENTENCIA Llave_c
;
*/